import { computed, isSignal, untracked, } from '@angular/core';
export function toDeepSignal(signal) {
    const value = untracked(() => signal());
    if (!isRecord(value)) {
        return signal;
    }
    return new Proxy(signal, {
        get(target, prop) {
            if (!(prop in value)) {
                return target[prop];
            }
            if (!isSignal(target[prop])) {
                Object.defineProperty(target, prop, {
                    value: computed(() => target()[prop]),
                    configurable: true,
                });
            }
            return toDeepSignal(target[prop]);
        },
    });
}
function isRecord(value) {
    return value?.constructor === Object;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGVlcC1zaWduYWwuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9tb2R1bGVzL3NpZ25hbHMvc3JjL2RlZXAtc2lnbmFsLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFDTCxRQUFRLEVBQ1IsUUFBUSxFQUVSLFNBQVMsR0FDVixNQUFNLGVBQWUsQ0FBQztBQW1CdkIsTUFBTSxVQUFVLFlBQVksQ0FBSSxNQUFpQjtJQUMvQyxNQUFNLEtBQUssR0FBRyxTQUFTLENBQUMsR0FBRyxFQUFFLENBQUMsTUFBTSxFQUFFLENBQUMsQ0FBQztJQUN4QyxJQUFJLENBQUMsUUFBUSxDQUFDLEtBQUssQ0FBQyxFQUFFO1FBQ3BCLE9BQU8sTUFBdUIsQ0FBQztLQUNoQztJQUVELE9BQU8sSUFBSSxLQUFLLENBQUMsTUFBTSxFQUFFO1FBQ3ZCLEdBQUcsQ0FBQyxNQUFXLEVBQUUsSUFBSTtZQUNuQixJQUFJLENBQUMsQ0FBQyxJQUFJLElBQUksS0FBSyxDQUFDLEVBQUU7Z0JBQ3BCLE9BQU8sTUFBTSxDQUFDLElBQUksQ0FBQyxDQUFDO2FBQ3JCO1lBRUQsSUFBSSxDQUFDLFFBQVEsQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLENBQUMsRUFBRTtnQkFDM0IsTUFBTSxDQUFDLGNBQWMsQ0FBQyxNQUFNLEVBQUUsSUFBSSxFQUFFO29CQUNsQyxLQUFLLEVBQUUsUUFBUSxDQUFDLEdBQUcsRUFBRSxDQUFDLE1BQU0sRUFBRSxDQUFDLElBQUksQ0FBQyxDQUFDO29CQUNyQyxZQUFZLEVBQUUsSUFBSTtpQkFDbkIsQ0FBQyxDQUFDO2FBQ0o7WUFFRCxPQUFPLFlBQVksQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQztRQUNwQyxDQUFDO0tBQ0YsQ0FBQyxDQUFDO0FBQ0wsQ0FBQztBQUVELFNBQVMsUUFBUSxDQUFDLEtBQWM7SUFDOUIsT0FBTyxLQUFLLEVBQUUsV0FBVyxLQUFLLE1BQU0sQ0FBQztBQUN2QyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgY29tcHV0ZWQsXG4gIGlzU2lnbmFsLFxuICBTaWduYWwgYXMgTmdTaWduYWwsXG4gIHVudHJhY2tlZCxcbn0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBJc0tub3duUmVjb3JkIH0gZnJvbSAnLi90cy1oZWxwZXJzJztcblxuLy8gQW4gZXh0ZW5kZWQgU2lnbmFsIHR5cGUgdGhhdCBlbmFibGVzIHRoZSBjb3JyZWN0IHR5cGluZ1xuLy8gb2YgbmVzdGVkIHNpZ25hbHMgd2l0aCB0aGUgYG5hbWVgIG9yIGBsZW5ndGhgIGtleS5cbmV4cG9ydCBpbnRlcmZhY2UgU2lnbmFsPFQ+IGV4dGVuZHMgTmdTaWduYWw8VD4ge1xuICBuYW1lOiB1bmtub3duO1xuICBsZW5ndGg6IHVua25vd247XG59XG5cbmV4cG9ydCB0eXBlIERlZXBTaWduYWw8VD4gPSBTaWduYWw8VD4gJlxuICAoSXNLbm93blJlY29yZDxUPiBleHRlbmRzIHRydWVcbiAgICA/IFJlYWRvbmx5PHtcbiAgICAgICAgW0sgaW4ga2V5b2YgVF06IElzS25vd25SZWNvcmQ8VFtLXT4gZXh0ZW5kcyB0cnVlXG4gICAgICAgICAgPyBEZWVwU2lnbmFsPFRbS10+XG4gICAgICAgICAgOiBTaWduYWw8VFtLXT47XG4gICAgICB9PlxuICAgIDogdW5rbm93bik7XG5cbmV4cG9ydCBmdW5jdGlvbiB0b0RlZXBTaWduYWw8VD4oc2lnbmFsOiBTaWduYWw8VD4pOiBEZWVwU2lnbmFsPFQ+IHtcbiAgY29uc3QgdmFsdWUgPSB1bnRyYWNrZWQoKCkgPT4gc2lnbmFsKCkpO1xuICBpZiAoIWlzUmVjb3JkKHZhbHVlKSkge1xuICAgIHJldHVybiBzaWduYWwgYXMgRGVlcFNpZ25hbDxUPjtcbiAgfVxuXG4gIHJldHVybiBuZXcgUHJveHkoc2lnbmFsLCB7XG4gICAgZ2V0KHRhcmdldDogYW55LCBwcm9wKSB7XG4gICAgICBpZiAoIShwcm9wIGluIHZhbHVlKSkge1xuICAgICAgICByZXR1cm4gdGFyZ2V0W3Byb3BdO1xuICAgICAgfVxuXG4gICAgICBpZiAoIWlzU2lnbmFsKHRhcmdldFtwcm9wXSkpIHtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwgcHJvcCwge1xuICAgICAgICAgIHZhbHVlOiBjb21wdXRlZCgoKSA9PiB0YXJnZXQoKVtwcm9wXSksXG4gICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgICB9KTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIHRvRGVlcFNpZ25hbCh0YXJnZXRbcHJvcF0pO1xuICAgIH0sXG4gIH0pO1xufVxuXG5mdW5jdGlvbiBpc1JlY29yZCh2YWx1ZTogdW5rbm93bik6IHZhbHVlIGlzIFJlY29yZDxzdHJpbmcsIHVua25vd24+IHtcbiAgcmV0dXJuIHZhbHVlPy5jb25zdHJ1Y3RvciA9PT0gT2JqZWN0O1xufVxuIl19